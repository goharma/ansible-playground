---
- name: Comprehensive Ansible Filter Demo
  hosts: localhost
  gather_facts: false
  vars:
    demo_string: "  Error detected in USB 3.0 port.  "
    demo_list: [3, 1, 2, 3]
    demo_dict: {name: "Koy", city: "Denver"}
    list_of_dicts:
      - {key: "a", value: 1}
      - {key: "b", value: 2}
    nested_list: [[1], [2, 3]]
    select_list: [1, 2, 3, 4]
    zip_list1: ['alpha', 'beta']
    zip_list2: [1, 2]
    type_string: "42"
    maybe_undefined: ""
    secure_mode: true
    filepath: "/home/koy/.config/settings.conf"
    date_string: "2025-07-22"
    ip_address: "192.168.0.1"
    subnet_input: "192.168.0.1/24"

  tasks:

    - name: 🔤 String Manipulation Filters
      debug:
        msg:
          - "Upper: {{ demo_string | upper }}"
          - "Lower: {{ demo_string | lower }}"
          - "Capitalize: {{ demo_string | capitalize }}"
          - "Title: {{ demo_string | title }}"
          - "Replace: {{ demo_string | replace('USB 3.0', 'USB-C') }}"
          - "Trim: {{ demo_string | trim }}"
          - "Regex Replace: {{ demo_string | regex_replace('USB.*?\\s', 'USB-C ') }}"
          - "Join: {{ ['WireGuard', 'VPN', 'Ansible'] | join(', ') }}"

    - name: 📋 List & Dictionary Filters
      debug:
        msg:
          - "Sorted: {{ demo_list | sort }}"
          - "Unique: {{ demo_list | unique }}"
          - "Flatten: {{ nested_list | flatten }}"
          - "Length: {{ demo_list | length }}"
          - "First: {{ demo_list | first }}"
          - "Last: {{ demo_list | last }}"
          - "Min: {{ demo_list | min }}"
          - "Max: {{ demo_list | max }}"
          - "dict2items: {{ demo_dict | dict2items }}"
          - "items2dict: {{ list_of_dicts | items2dict }}"
          - "Select >2: {{ select_list | select('>', 2) | list }}"
          - "Reject <3: {{ select_list | reject('<', 3) | list }}"
          - "Map to string: {{ demo_list | map('string') | list }}"
          - "Zip: {{ zip_list1 | zip(zip_list2) | list }}"          
          - "{{ ['foo', 'bar'] | product(['com']) | map('join', '.') | join(',') }}"    # Product
          - "{{ [1,2,3] | ansible.builtin.permutations | list }}"                       # Permutations
          - "{{ [1,2,3] | ansible.builtin.combinations(2) | list }}"
          # Add to list 
          - "Add to list: {{ demo_list + [5] }}"                                      # Add single item
          - "Add multiple: {{ demo_list + [5, 6, 7] }}"                               # Add multiple items
          - "Prepend to list: {{ [0] + demo_list }}"                                  # Add to beginning
          - "Insert using union: {{ demo_list | union([5]) }}"                        # Add unique items only          
          # Add to dict
          - "Combine dicts: {{ {'a': 1} | combine({'b': 2}) }}"
          - "Add to dict: {{ demo_dict | combine({'country': 'USA'}) }}"              # Add single key-value
          - "Add multiple: {{ demo_dict | combine({'country': 'USA', 'zip': '80202'}) }}" # Add multiple keys
          - "Merge dicts: {{ demo_dict | combine({'a': 1}, {'b': 2}) }}"              # Merge multiple dicts
          # Remove from list 
          - "Remove item: {{ ['one', 'two', 'three'] | difference(['two']) }}"          # Remove 'two'
          - "Remove item: {{ ['one', 'two', 'three'] | difference(['two', 'three']) }}" # Remove 'two'
          # Remove from dict
          - "Remove dict key: {{ demo_dict | dict2items | rejectattr('key', 'equalto', 'name') | items2dict }}" # Remove 'name'
          - "Remove dict key: {{ demo_dict | dict2items | selectattr('key', '!=', 'name') | items2dict }}"
          - "Remove dict key: {{ demo_dict | dict2items | rejectattr('key', 'equalto', 'name') | items2dict }}"
          - "Remove item: {{ demo_dict | combine({'name': omit}) }}" # Remove 'name' Doesn't work
          

    - name: 🔢 Type Conversion & Defaults
      debug:
        msg:
          - "To int: {{ type_string | int }}"
          - "To float: {{ type_string | float }}"
          - "To bool: {{ type_string | bool }}"
          - "To string: {{ 42 | string }}"
          - "Default: {{ maybe_undefined | default('Fallback') }}"
          - "Ternary: {{ secure_mode | ternary('Secure', 'Insecure') }}"
          - "Type Debug: {{ demo_dict | type_debug }}"

    - name: 📁 Path & File Filters
      debug:
        msg:
          - "Basename: {{ filepath | basename }}"
          - "Dirname: {{ filepath | dirname }}"
          - "Realpath: {{ filepath | realpath }}"
          - "Realpath: {{ filepath | realpath | split('/') }}"
          - "Splitext: {{ filepath | splitext }}"
          - "Expanduser: {{ '~/.bashrc' | expanduser }}"

    - name: 📅 Date & Time Filters
      debug:
        msg:
          - "Date String: {{ date_string }}"
          - "Epoch (seconds): {{ lookup('pipe', 'date -d ' ~ date_string ~ ' +%s') | int }}"

    - name: 🔐 Hashing & UUID Filters
      debug:
        msg:
          - "UUID: {{ lookup('pipe', 'uuidgen') }}"
          - "Password Hash: {{ 'my_secure_pass' | password_hash('sha512') }}"
          - "Hash (SHA1): {{ 'sample' | hash('sha1') }}"

    - name: 🌐 Network Filters
      debug:
        msg:
          - "Is Private IP: {{ ip_address | ipaddr('private') }}"
          - "IPv4 Check: {{ ip_address | ipv4 }}"

    - name: 🧪 Debugging & Safety Filters
      debug:
        msg:
          - "Mandatory: {{ secure_mode | mandatory }}"
          - "Use omit: {{ '' | default(omit) }}"

    - name: 🔍 Lookup Filters & Plugins
      debug:
        msg:
          - "File lookup: {{ lookup('file', '/etc/hostname') }}"
          - "Environment var: {{ lookup('env', 'HOME') }}"
          - "Pipe command: {{ lookup('pipe', 'whoami') }}"
          - "Random password: {{ lookup('password', '/dev/null length=8') }}"
          - "First defined: {{ lookup('first_found', ['/tmp/missing', '/etc/passwd']) }}"
          - "DNS lookup: {{ lookup('dig', 'google.com') }}"
          # - "Template lookup: {{ lookup('template', 'template.j2') | default('Template not found') }}"
          - "Sequence: {{ lookup('sequence', 'start=1 end=5 format=%02d') }}"

    - name: Pipe
      set_fact:
        whoami: "{{ lookup('pipe', 'ls -l /') }}"
              
    - name: 🔍 Lookup Filters & Plugins
      debug:
        msg: "{{ whoami.splitlines() }}"

    - name: Search in list 
      debug:
        msg:
          - "In list: {{ 'foo' in ['foo', 'bar', 'baz'] }}"
          - "Search: {{ 'Ansible' in 'AnsibleDemo' }}" 
          - "Starts with: {{ 'AnsibleDemo' | regex_search('^Ansible') }}"
          - "Ends with: {{ 'AnsibleDemo' | regex_search('Demo$') }}"
          - "Starts With: {{ 'AnsibleDemo' | lower | startswith('ansible') }}" 
          #- "Ends With: {{ 'AnsibleDemo' | endswith('Demo') }}"
          #- "Search: {{ 'AnsibleDemo' | search('Demo') != -1 }}"


